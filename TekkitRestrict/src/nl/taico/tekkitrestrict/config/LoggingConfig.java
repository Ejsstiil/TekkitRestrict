package nl.taico.tekkitrestrict.config;

import java.util.ArrayList;

public class LoggingConfig extends TRConfig {
	public static ArrayList<String> defaultContents(boolean extra){
		ArrayList<String> tbr = new ArrayList<String>(130);
		
		tbr.add("###########################################################################");
		tbr.add("## Configuration file for TekkitRestrict                                 ##");
		tbr.add("## Authors: Taeir, DreadEnd (aka DreadSlicer)                            ##");
		tbr.add("## BukkitDev: http://dev.bukkit.org/server-mods/tekkit-restrict/         ##");
		tbr.add("## Please ask questions/report issues on the BukkitDev page.             ##");
		tbr.add("###########################################################################");
		tbr.add("");
		tbr.add("###########################################################################");
		tbr.add("################################# Logging #################################");
		tbr.add("###########################################################################");
		tbr.add("");
		tbr.add("# The format of the name of the logfile.");
		tbr.add("# Default: \"{TYPE}-{DAY}-{MONTH}-{YEAR}.log\"");
		tbr.add("FilenameFormat: \"{TYPE}-{DAY}-{MONTH}-{YEAR}.log\"");
		if (extra) tbr.add("#:-;-:# FilenameFormat");
		tbr.add("");
		tbr.add("# The format to log a string.");
		tbr.add("# Default: \"[{HOUR}:{MINUTE}:{SECOND}] {INFO}\"");
		tbr.add("LogStringFormat: \"[{HOUR}:{MINUTE}:{SECOND}] {INFO}\"");
		if (extra) tbr.add("#:-;-:# LogStringFormat");
		tbr.add("");
		tbr.add("# Should debug messages be logged?");
		tbr.add("# Default: false");
		tbr.add("LogDebug: false");
		if (extra) tbr.add("#:-;-:# LogDebug");
		tbr.add("");
		tbr.add("###########################################################################");
		tbr.add("################################ Split Logs ###############################");
		tbr.add("###########################################################################");
		tbr.add("");
		tbr.add("# Should tekkitrestrict split the logs into many parts?");
		tbr.add("# (e.g. Chat, Commands, Login/Logout, Warnings, etc.)");
		tbr.add("# Default: true");
		tbr.add("SplitLogs: true");
		if (extra) tbr.add("#:-;-:# SplitLogs");
		tbr.add("");
		tbr.add("# The folder where TekkitRestrict should place the split logs.");
		tbr.add("# NOTE: The path starts at the server root.");
		tbr.add("# Example file: server_root/log/chat/chat-23-10-13.log");
		tbr.add("# Default: \"log\"");
		tbr.add("SplitLogsLocation: \"log\"");
		if (extra) tbr.add("#:-;-:# SplitLogsLocation");
		tbr.add("");
		tbr.add("###########################################################################");
		tbr.add("############################### Filter Logs ###############################");
		tbr.add("###########################################################################");
		tbr.add("");
		tbr.add("# Should TekkitRestrict filter out certain things from the logs?");
		tbr.add("# Default: true");
		tbr.add("FilterLogs: true");
		if (extra) tbr.add("#:-;-:# FilterLogs");
		tbr.add("");
		tbr.add("# If a String contains any of the items listed here, it will not be");
		tbr.add("# logged. Does not work if FilterLogs is false.");
		tbr.add("# To add loglevels, do the following:");
		tbr.add("# - \"loglevel: fine\"");
		tbr.add("LogFilter:");
		if (extra) tbr.add("#:-;-:# LogFilter 12");
		tbr.add("- \"joined with\"");
		tbr.add("- \"overloaded?\"");
		tbr.add("- \"perhaps you are running a custom one\"");
		tbr.add("- \"latest artifact information\"");
		tbr.add("- \"sending serverside check to\"");
		tbr.add("- \"server permissions file permissions.yml is empty, ignoring it\"");
		tbr.add("- \"connection reset\"");
		tbr.add("- \"repair is active..\"");
		tbr.add("- \"player found..\"");
		tbr.add("- \"slotchanging(\"");
		tbr.add("- \"attempted to place a tile entity\"");
		tbr.add("- \"chunk coordinates:\"");
		tbr.add("");
		tbr.add("###########################################################################");
		tbr.add("############################# Log Hacks/Dupes #############################");
		tbr.add("###########################################################################");
		tbr.add("# NOTE: These will be logged at plugins/tekkitrestrict/log/");
		tbr.add("");
		tbr.add("# When a user is FlyHacking, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogFlyHack: true");
		if (extra) tbr.add("#:-;-:# LogFlyHack");
		tbr.add("");
		tbr.add("# When a user is SpeedHacking, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogMovementSpeedHack: true");
		if (extra) tbr.add("#:-;-:# LogMovementSpeedHack");
		tbr.add("");
		tbr.add("# When a user is ForcefieldHacking, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogForcefieldHack: true");
		if (extra) tbr.add("#:-;-:# LogForcefieldHack");
		tbr.add("");
		tbr.add("# When a player (tries to) dupe, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogDupes: true");
		if (extra) tbr.add("#:-;-:# LogDupes");
		tbr.add("");
		tbr.add("###########################################################################");
		tbr.add("############################## Log EE Items ###############################");
		tbr.add("###########################################################################");
		tbr.add("# NOTE: These will be logged at plugins/tekkitrestrict/log/");
		tbr.add("");
		tbr.add("# When a player uses an amulet, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogAmulets: true");
		if (extra) tbr.add("#:-;-:# LogAmulets");
		tbr.add("");
		tbr.add("# When a player uses a ring, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogRings: true");
		if (extra) tbr.add("#:-;-:# LogRings");
		tbr.add("");
		tbr.add("# When a player uses a Dark Matter Tool, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogDMTools: true");
		if (extra) tbr.add("#:-;-:# LogDMTools");
		tbr.add("");
		tbr.add("# When a player uses a Red Matter Tool, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogRMTools: true");
		if (extra) tbr.add("#:-;-:# LogRMTools");
		tbr.add("");
		tbr.add("# When a player uses certain EE items, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogEEMisc: true");
		if (extra) tbr.add("#:-;-:# LogEEMisc");
		tbr.add("");
		tbr.add("# When a player uses a Destructive EE item, should it be logged?");
		tbr.add("# Default: true");
		tbr.add("LogEEDestructive: true");
		if (extra) tbr.add("#:-;-:# LogEEDestructive");
		tbr.add("");
		tbr.add("###########################################################################");
		tbr.add("###########################################################################");
		tbr.add("###########################################################################");
		
		return tbr;
	}
	
	public static void upgradeFile(){
		upgradeFile("Logging", convertDefaults(defaultContents(true)));
	}
}
